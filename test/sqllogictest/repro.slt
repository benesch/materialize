# Copyright 1994, Regents of the University of California.
# Copyright 1996-2019 PostgreSQL Global Development Group.
# Copyright Materialize, Inc. All rights reserved.
#
# Use of this software is governed by the Business Source License
# included in the LICENSE file at the root of this repository.
#
# As of the Change Date specified in that file, in accordance with
# the Business Source License, use of this software will be governed
# by the Apache License, Version 2.0.
#
# This file is derived from the regression test suite in PostgreSQL.
# The original file was retrieved on July 25, 2020 from:
#
#     https://github.com/postgres/postgres/blob/15e441972276e95639f8c3d9f5f66c2318fe9348/src/test/regress/expected/subselect.out
#
# The original source code is subject to the terms of the PostgreSQL
# license, a copy of which can be found in the LICENSE file at the
# root of this repository.

mode cockroach

statement ok
CREATE SOURCE onek_src FROM FILE 'test/sqllogictest/postgres/testdata/onek.data'
FORMAT CSV WITH 16 COLUMNS DELIMITED BY E'\t'

statement ok
CREATE MATERIALIZED VIEW onek AS SELECT
  column1::int4 AS unique1,
  column2::int4 AS unique2,
  column3::int4 AS two,
  column4::int4 AS four,
  column5::int4 AS ten,
  column6::int4 AS twenty,
  column7::int4 AS hundred,
  column8::int4 AS thousand,
  column9::int4 AS twothousand,
  column10::int4 AS fivethous,
  column11::int4 AS tenthous,
  column12::int4 AS odd,
  column13::int4 AS even,
  column14::text AS stringu1,
  column15::text AS stringu2,
  column16::text AS string4
  FROM onek_src

statement ok
CREATE SOURCE tenk1_src FROM FILE 'test/sqllogictest/postgres/testdata/tenk.data'
FORMAT CSV WITH 16 COLUMNS DELIMITED BY E'\t'

statement ok
CREATE MATERIALIZED VIEW tenk1 AS SELECT
  column1::int4 AS unique1,
  column2::int4 AS unique2,
  column3::int4 AS two,
  column4::int4 AS four,
  column5::int4 AS ten,
  column6::int4 AS twenty,
  column7::int4 AS hundred,
  column8::int4 AS thousand,
  column9::int4 AS twothousand,
  column10::int4 AS fivethous,
  column11::int4 AS tenthous,
  column12::int4 AS odd,
  column13::int4 AS even,
  column14::text AS stringu1,
  column15::text AS stringu2,
  column16::text AS string4
  FROM tenk1_src

# Wait for asynchronous ingestion to complete.
query TI rowsort
SELECT 'onek', count(*) FROM onek
UNION ALL
SELECT 'tenk1', count(*) FROM tenk1
AS OF 18446744073709551615
----
onek 1000
tenk1 10000

statement ok
CREATE TABLE int4_tbl (f1 int)

statement ok
INSERT INTO int4_tbl (f1) VALUES (0), (123456), (-123456), (2147483647), (-2147483647)

statement ok
CREATE TABLE int8_tbl (q1 bigint, q2 bigint)

statement ok
INSERT INTO int8_tbl VALUES
    (123, 456),
    (123, 4567890123456789),
    (4567890123456789, 123),
    (4567890123456789, 4567890123456789),
    (4567890123456789, -4567890123456789)

query I colnames
select * from int4_tbl where
  (case when f1 in (select unique1 from tenk1 a) then f1 else null end) in
  (select ten from tenk1 b)
----
f1
0
